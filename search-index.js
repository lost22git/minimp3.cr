crystal_doc_search_index_callback({"repository_name":"minimp3","body":"# minimp3\n\n[minimp3](https://github.com/lieff/minimp3) binding for crystal lang\n\n[API DOC](https://lost22git.github.io/minimp3.cr)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     minimp3:\n       github: lost22git/minimp3\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"minimp3\"\n```\n\nTODO: Write usage instructions here\n\n## Development\n\nTODO: Write development instructions here\n\n## Contributing\n\n1. Fork it (<https://github.com/lost22git/minimp3/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [lost](https://github.com/lost22git) - creator and maintainer\n","program":{"html_id":"minimp3/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"minimp3","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"minimp3/Minimp3","path":"Minimp3.html","kind":"module","full_name":"Minimp3","name":"Minimp3","abstract":false,"locations":[{"filename":"src/minimp3.cr","line_number":2,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L2"},{"filename":"src/minimp3.cr","line_number":243,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L243"}],"repository_name":"minimp3","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ONE_SAMPLE_BYTES","name":"ONE_SAMPLE_BYTES","value":"sizeof(LibMinimp3::Mp3dSampleT)"}],"types":[{"html_id":"minimp3/Minimp3/Decoder","path":"Minimp3/Decoder.html","kind":"class","full_name":"Minimp3::Decoder","name":"Decoder","abstract":false,"superclass":{"html_id":"minimp3/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"minimp3/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"minimp3/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"minimp3/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/minimp3.cr","line_number":317,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L317"}],"repository_name":"minimp3","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"minimp3/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"namespace":{"html_id":"minimp3/Minimp3","kind":"module","full_name":"Minimp3","name":"Minimp3"},"class_methods":[{"html_id":"can_decode?(file:String):Bool-class-method","name":"can_decode?","doc":"detect file if can decode\n","summary":"<p>detect file if can decode</p>","abstract":false,"args":[{"name":"file","external_name":"file","restriction":"String"}],"args_string":"(file : String) : Bool","args_html":"(file : String) : Bool","location":{"filename":"src/minimp3.cr","line_number":329,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L329"},"def":{"name":"can_decode?","args":[{"name":"file","external_name":"file","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"{% if flag?(:win32) %}\n      LibMinimp3.detect_file(file.to_utf16) == 0\n    {% else %}\n      LibMinimp3.detect_file(file) == 0\n    {% end %}"}},{"html_id":"can_decode?(buf:Bytes):Bool-class-method","name":"can_decode?","doc":"detect buffer if can decode\n","summary":"<p>detect buffer if can decode</p>","abstract":false,"args":[{"name":"buf","external_name":"buf","restriction":"Bytes"}],"args_string":"(buf : Bytes) : Bool","args_html":"(buf : Bytes) : Bool","location":{"filename":"src/minimp3.cr","line_number":339,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L339"},"def":{"name":"can_decode?","args":[{"name":"buf","external_name":"buf","restriction":"Bytes"}],"return_type":"Bool","visibility":"Public","body":"(LibMinimp3.detect_buf(buf, buf.size)) == 0"}},{"html_id":"decode(io:IO,callback:Frame->)-class-method","name":"decode","doc":"read data from `IO` to decode them and call callback with `decoded data (aka. pcm data)` and `frame info`\n","summary":"<p>read data from <code>IO</code> to decode them and call callback with `decoded data (aka.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"callback","external_name":"callback","restriction":"(Frame ->)"}],"args_string":"(io : IO, callback : Frame -> )","args_html":"(io : IO, callback : <a href=\"../Minimp3/Frame.html\">Frame</a> -> )","location":{"filename":"src/minimp3.cr","line_number":345,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L345"},"def":{"name":"decode","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"callback","external_name":"callback","restriction":"(Frame ->)"}],"visibility":"Public","body":"dec = Pointer(LibMinimp3::Mp3decT).malloc(1)\nLibMinimp3.init(dec)\npcm_buf = Slice(LibMinimp3::Mp3dSampleT).new(LibMinimp3::MINIMP3_MAX_SAMPLES_PER_FRAME)\nto_decode_buf = Bytes.new(16 * 1024)\nto_decode_size = 0\nlast_loop_decoded_size = 0\nloop do\n  to_decode_size = to_decode_size - last_loop_decoded_size\n  if last_loop_decoded_size > 0\n    move_pos = last_loop_decoded_size\n    move_size = to_decode_size\n    to_decode_buf.to_unsafe.move_from(to_decode_buf.to_unsafe + move_pos, move_size)\n  end\n  to_read_pos = to_decode_size\n  to_read_size = to_decode_buf.size - to_decode_size\n  to_read_buf = Bytes.new(to_decode_buf.to_unsafe + to_read_pos, to_read_size)\n  to_decode_size = to_decode_size + (io.read(to_read_buf))\n  if to_decode_size == 0\n    puts(\"EOF and not buffer to decode, return\")\n    return\n  end\n  frame_info = uninitialized LibMinimp3::Mp3decFrameInfoT\n  samples = LibMinimp3.decode_frame(dec, to_decode_buf, to_decode_size, pcm_buf, pointerof(frame_info))\n  last_loop_decoded_size = frame_bytes = frame_info.frame_bytes\n  if (samples == 0) && (frame_bytes == 0)\n    puts(\"No samples, return\")\n    return\n  else\n    if (samples == 0) && frame_bytes > 0\n      next\n    else\n      if samples > 0 && frame_bytes > 0\n        frame = Frame.from_decode_result(pcm_buf, frame_info, samples)\n        callback.call(frame)\n      else\n        raise(Error.new(\"Unexpeced decode result:  samples: #{samples}, frame_bytes: #{frame_bytes}\"))\n      end\n    end\n  end\nend\n"}}],"constructors":[{"html_id":"new(reader:IO)-class-method","name":"new","abstract":false,"args":[{"name":"reader","external_name":"reader","restriction":"IO"}],"args_string":"(reader : IO)","args_html":"(reader : IO)","location":{"filename":"src/minimp3.cr","line_number":320,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L320"},"def":{"name":"new","args":[{"name":"reader","external_name":"reader","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(reader)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"each-instance-method","name":"each","doc":"Must return an `Iterator` over the elements in this collection.","summary":"<p>Must return an <code>Iterator</code> over the elements in this collection.</p>","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":323,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L323"},"def":{"name":"each","visibility":"Public","body":"FrameIterator.new(@reader)"}}]},{"html_id":"minimp3/Minimp3/ErrnoError","path":"Minimp3/ErrnoError.html","kind":"class","full_name":"Minimp3::ErrnoError","name":"ErrnoError","abstract":false,"superclass":{"html_id":"minimp3/Minimp3/Error","kind":"class","full_name":"Minimp3::Error","name":"Error"},"ancestors":[{"html_id":"minimp3/Minimp3/Error","kind":"class","full_name":"Minimp3::Error","name":"Error"},{"html_id":"minimp3/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"minimp3/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"minimp3/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/minimp3.cr","line_number":258,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L258"}],"repository_name":"minimp3","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"minimp3/Minimp3","kind":"module","full_name":"Minimp3","name":"Minimp3"},"constructors":[{"html_id":"new(errno)-class-method","name":"new","abstract":false,"args":[{"name":"errno","external_name":"errno","restriction":""}],"args_string":"(errno)","args_html":"(errno)","location":{"filename":"src/minimp3.cr","line_number":259,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L259"},"def":{"name":"new","args":[{"name":"errno","external_name":"errno","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(errno)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"minimp3/Minimp3/ErrnoKind","path":"Minimp3/ErrnoKind.html","kind":"enum","full_name":"Minimp3::ErrnoKind","name":"ErrnoKind","abstract":false,"ancestors":[{"html_id":"minimp3/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"minimp3/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"minimp3/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"minimp3/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/minimp3.cr","line_number":249,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L249"}],"repository_name":"minimp3","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Unkown","name":"Unkown","value":"0"},{"id":"Param","name":"Param","value":"1"},{"id":"Memory","name":"Memory","value":"2"},{"id":"IO","name":"IO","value":"3"},{"id":"User","name":"User","value":"4"},{"id":"Decode","name":"Decode","value":"5"}],"namespace":{"html_id":"minimp3/Minimp3","kind":"module","full_name":"Minimp3","name":"Minimp3"},"instance_methods":[{"html_id":"decode?-instance-method","name":"decode?","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":255,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L255"},"def":{"name":"decode?","visibility":"Public","body":"self == Decode"}},{"html_id":"io?-instance-method","name":"io?","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":253,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L253"},"def":{"name":"io?","visibility":"Public","body":"self == IO"}},{"html_id":"memory?-instance-method","name":"memory?","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":252,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L252"},"def":{"name":"memory?","visibility":"Public","body":"self == Memory"}},{"html_id":"param?-instance-method","name":"param?","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":251,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L251"},"def":{"name":"param?","visibility":"Public","body":"self == Param"}},{"html_id":"unkown?-instance-method","name":"unkown?","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":250,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L250"},"def":{"name":"unkown?","visibility":"Public","body":"self == Unkown"}},{"html_id":"user?-instance-method","name":"user?","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":254,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L254"},"def":{"name":"user?","visibility":"Public","body":"self == User"}}]},{"html_id":"minimp3/Minimp3/Error","path":"Minimp3/Error.html","kind":"class","full_name":"Minimp3::Error","name":"Error","abstract":false,"superclass":{"html_id":"minimp3/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"minimp3/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"minimp3/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"minimp3/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/minimp3.cr","line_number":246,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L246"}],"repository_name":"minimp3","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"minimp3/Minimp3/ErrnoError","kind":"class","full_name":"Minimp3::ErrnoError","name":"ErrnoError"}],"namespace":{"html_id":"minimp3/Minimp3","kind":"module","full_name":"Minimp3","name":"Minimp3"}},{"html_id":"minimp3/Minimp3/Frame","path":"Minimp3/Frame.html","kind":"struct","full_name":"Minimp3::Frame","name":"Frame","abstract":false,"superclass":{"html_id":"minimp3/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"minimp3/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"minimp3/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"minimp3/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/minimp3.cr","line_number":278,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L278"}],"repository_name":"minimp3","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"minimp3/Minimp3","kind":"module","full_name":"Minimp3","name":"Minimp3"},"class_methods":[{"html_id":"from_decode_result(pcm_buf,frame_info,samples)-class-method","name":"from_decode_result","abstract":false,"args":[{"name":"pcm_buf","external_name":"pcm_buf","restriction":""},{"name":"frame_info","external_name":"frame_info","restriction":""},{"name":"samples","external_name":"samples","restriction":""}],"args_string":"(pcm_buf, frame_info, samples)","args_html":"(pcm_buf, frame_info, samples)","location":{"filename":"src/minimp3.cr","line_number":302,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L302"},"def":{"name":"from_decode_result","args":[{"name":"pcm_buf","external_name":"pcm_buf","restriction":""},{"name":"frame_info","external_name":"frame_info","restriction":""},{"name":"samples","external_name":"samples","restriction":""}],"visibility":"Public","body":"exact_samples_bytes = (frame_info.channels * samples) * ONE_SAMPLE_BYTES\nFrame.new(data_buf: Bytes.new(pcm_buf.to_unsafe.as(::Pointer(UInt8)), exact_samples_bytes), frame_offset: frame_info.frame_offset.to_u32, frame_bytes: frame_info.frame_bytes.to_u32, layer: frame_info.layer.to_u32, channels: frame_info.channels.to_u32, samples: samples.to_u32, sample_rate: frame_info.hz.to_u32, bit_rate: frame_info.bitrate_kbps.to_u32 * 1000)\n"}}],"constructors":[{"html_id":"new(data_buf:Bytes,frame_offset:UInt32,frame_bytes:UInt32,layer:UInt32,channels:UInt32,samples:UInt32,sample_rate:UInt32,bit_rate:UInt32)-class-method","name":"new","abstract":false,"args":[{"name":"data_buf","external_name":"data_buf","restriction":"Bytes"},{"name":"frame_offset","external_name":"frame_offset","restriction":"UInt32"},{"name":"frame_bytes","external_name":"frame_bytes","restriction":"UInt32"},{"name":"layer","external_name":"layer","restriction":"UInt32"},{"name":"channels","external_name":"channels","restriction":"UInt32"},{"name":"samples","external_name":"samples","restriction":"UInt32"},{"name":"sample_rate","external_name":"sample_rate","restriction":"UInt32"},{"name":"bit_rate","external_name":"bit_rate","restriction":"UInt32"}],"args_string":"(data_buf : Bytes, frame_offset : UInt32, frame_bytes : UInt32, layer : UInt32, channels : UInt32, samples : UInt32, sample_rate : UInt32, bit_rate : UInt32)","args_html":"(data_buf : Bytes, frame_offset : UInt32, frame_bytes : UInt32, layer : UInt32, channels : UInt32, samples : UInt32, sample_rate : UInt32, bit_rate : UInt32)","location":{"filename":"src/minimp3.cr","line_number":278,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L278"},"def":{"name":"new","args":[{"name":"data_buf","external_name":"data_buf","restriction":"Bytes"},{"name":"frame_offset","external_name":"frame_offset","restriction":"UInt32"},{"name":"frame_bytes","external_name":"frame_bytes","restriction":"UInt32"},{"name":"layer","external_name":"layer","restriction":"UInt32"},{"name":"channels","external_name":"channels","restriction":"UInt32"},{"name":"samples","external_name":"samples","restriction":"UInt32"},{"name":"sample_rate","external_name":"sample_rate","restriction":"UInt32"},{"name":"bit_rate","external_name":"bit_rate","restriction":"UInt32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(data_buf, frame_offset, frame_bytes, layer, channels, samples, sample_rate, bit_rate)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bit_rate:UInt32-instance-method","name":"bit_rate","abstract":false,"def":{"name":"bit_rate","return_type":"UInt32","visibility":"Public","body":"@bit_rate"}},{"html_id":"channels:UInt32-instance-method","name":"channels","abstract":false,"def":{"name":"channels","return_type":"UInt32","visibility":"Public","body":"@channels"}},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":278,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L278"},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@data_buf.clone, @frame_offset.clone, @frame_bytes.clone, @layer.clone, @channels.clone, @samples.clone, @sample_rate.clone, @bit_rate.clone)"}},{"html_id":"copy_with(data_buf_data_buf=@data_buf,frame_offset_frame_offset=@frame_offset,frame_bytes_frame_bytes=@frame_bytes,layer_layer=@layer,channels_channels=@channels,samples_samples=@samples,sample_rate_sample_rate=@sample_rate,bit_rate_bit_rate=@bit_rate)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_data_buf","default_value":"@data_buf","external_name":"data_buf","restriction":""},{"name":"_frame_offset","default_value":"@frame_offset","external_name":"frame_offset","restriction":""},{"name":"_frame_bytes","default_value":"@frame_bytes","external_name":"frame_bytes","restriction":""},{"name":"_layer","default_value":"@layer","external_name":"layer","restriction":""},{"name":"_channels","default_value":"@channels","external_name":"channels","restriction":""},{"name":"_samples","default_value":"@samples","external_name":"samples","restriction":""},{"name":"_sample_rate","default_value":"@sample_rate","external_name":"sample_rate","restriction":""},{"name":"_bit_rate","default_value":"@bit_rate","external_name":"bit_rate","restriction":""}],"args_string":"(data_buf _data_buf = @data_buf, frame_offset _frame_offset = @frame_offset, frame_bytes _frame_bytes = @frame_bytes, layer _layer = @layer, channels _channels = @channels, samples _samples = @samples, sample_rate _sample_rate = @sample_rate, bit_rate _bit_rate = @bit_rate)","args_html":"(data_buf _data_buf = @data_buf, frame_offset _frame_offset = @frame_offset, frame_bytes _frame_bytes = @frame_bytes, layer _layer = @layer, channels _channels = @channels, samples _samples = @samples, sample_rate _sample_rate = @sample_rate, bit_rate _bit_rate = @bit_rate)","location":{"filename":"src/minimp3.cr","line_number":278,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L278"},"def":{"name":"copy_with","args":[{"name":"_data_buf","default_value":"@data_buf","external_name":"data_buf","restriction":""},{"name":"_frame_offset","default_value":"@frame_offset","external_name":"frame_offset","restriction":""},{"name":"_frame_bytes","default_value":"@frame_bytes","external_name":"frame_bytes","restriction":""},{"name":"_layer","default_value":"@layer","external_name":"layer","restriction":""},{"name":"_channels","default_value":"@channels","external_name":"channels","restriction":""},{"name":"_samples","default_value":"@samples","external_name":"samples","restriction":""},{"name":"_sample_rate","default_value":"@sample_rate","external_name":"sample_rate","restriction":""},{"name":"_bit_rate","default_value":"@bit_rate","external_name":"bit_rate","restriction":""}],"visibility":"Public","body":"self.class.new(_data_buf, _frame_offset, _frame_bytes, _layer, _channels, _samples, _sample_rate, _bit_rate)"}},{"html_id":"data_buf:Bytes-instance-method","name":"data_buf","abstract":false,"def":{"name":"data_buf","return_type":"Bytes","visibility":"Public","body":"@data_buf"}},{"html_id":"exact_samples:UInt32-instance-method","name":"exact_samples","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":290,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L290"},"def":{"name":"exact_samples","return_type":"UInt32","visibility":"Public","body":"channels * samples"}},{"html_id":"exact_samples_bytes:UInt32-instance-method","name":"exact_samples_bytes","doc":"exact_samples_bytes = channels * samples * ONE_SAMPLE_BYTES","summary":"<p>exact_samples_bytes = channels * samples * ONE_SAMPLE_BYTES</p>","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":297,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L297"},"def":{"name":"exact_samples_bytes","return_type":"UInt32","visibility":"Public","body":"exact_samples * ONE_SAMPLE_BYTES"}},{"html_id":"frame_bytes:UInt32-instance-method","name":"frame_bytes","abstract":false,"def":{"name":"frame_bytes","return_type":"UInt32","visibility":"Public","body":"@frame_bytes"}},{"html_id":"frame_offset:UInt32-instance-method","name":"frame_offset","abstract":false,"def":{"name":"frame_offset","return_type":"UInt32","visibility":"Public","body":"@frame_offset"}},{"html_id":"layer:UInt32-instance-method","name":"layer","abstract":false,"def":{"name":"layer","return_type":"UInt32","visibility":"Public","body":"@layer"}},{"html_id":"sample_rate:UInt32-instance-method","name":"sample_rate","abstract":false,"def":{"name":"sample_rate","return_type":"UInt32","visibility":"Public","body":"@sample_rate"}},{"html_id":"samples:UInt32-instance-method","name":"samples","abstract":false,"def":{"name":"samples","return_type":"UInt32","visibility":"Public","body":"@samples"}}]},{"html_id":"minimp3/Minimp3/FrameIterator","path":"Minimp3/FrameIterator.html","kind":"class","full_name":"Minimp3::FrameIterator","name":"FrameIterator","abstract":false,"superclass":{"html_id":"minimp3/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"minimp3/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"minimp3/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"minimp3/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"minimp3/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/minimp3.cr","line_number":407,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L407"}],"repository_name":"minimp3","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"minimp3/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"namespace":{"html_id":"minimp3/Minimp3","kind":"module","full_name":"Minimp3","name":"Minimp3"},"constructors":[{"html_id":"new(reader:IO)-class-method","name":"new","abstract":false,"args":[{"name":"reader","external_name":"reader","restriction":"IO"}],"args_string":"(reader : IO)","args_html":"(reader : IO)","location":{"filename":"src/minimp3.cr","line_number":410,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L410"},"def":{"name":"new","args":[{"name":"reader","external_name":"reader","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(reader)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"location":{"filename":"src/minimp3.cr","line_number":419,"url":"https://github.com/lost22git/minimp3.cr/blob/e5c0136d0eb49f56f4f80e082289d4ad2c5ff255/src/minimp3.cr#L419"},"def":{"name":"next","visibility":"Public","body":"pcm_buf = Slice(LibMinimp3::Mp3dSampleT).new(LibMinimp3::MINIMP3_MAX_SAMPLES_PER_FRAME)\nloop do\n  @to_decode_size = @to_decode_size - @last_loop_decoded_size\n  if @last_loop_decoded_size > 0\n    move_pos = @last_loop_decoded_size\n    move_size = @to_decode_size\n    @to_decode_buf.to_unsafe.move_from(@to_decode_buf.to_unsafe + move_pos, move_size)\n  end\n  to_read_pos = @to_decode_size\n  to_read_size = @to_decode_buf.size - @to_decode_size\n  to_read_buf = Bytes.new(@to_decode_buf.to_unsafe + to_read_pos, to_read_size)\n  @to_decode_size = @to_decode_size + (@reader.read(to_read_buf))\n  if @to_decode_size > 0\n  else\n    return stop\n  end\n  frame_info = uninitialized LibMinimp3::Mp3decFrameInfoT\n  samples = LibMinimp3.decode_frame(@dec, @to_decode_buf, @to_decode_size, pcm_buf, pointerof(frame_info))\n  @last_loop_decoded_size = frame_bytes = frame_info.frame_bytes\n  if (samples == 0) && (frame_bytes == 0)\n    return stop\n  else\n    if (samples == 0) && frame_bytes > 0\n      next\n    else\n      if samples > 0 && frame_bytes > 0\n        return Frame.from_decode_result(pcm_buf, frame_info, samples)\n      else\n        raise(Error.new(\"Unexpeced decode result:  samples: #{samples}, frame_bytes: #{frame_bytes}\"))\n      end\n    end\n  end\nend\n"}}]}]}]}})